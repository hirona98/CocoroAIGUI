# アプリ概要
名称: CocoroAIGUI
概要: Unityで作成しているアプリとWebSocketで連携し、チャットUI、設定管理、及びPC全体のCPU使用率監視機能を提供する外部アプリケーション
技術: .NET8, WPF, WebSocket
主な機能:
・チャットUI：ユーザー入力の受け付けおよび表示  
・設定管理：ユーザーごとの各種設定（入力感度、テーマ等）の変更と管理  
・CPU監視：PC全体のCPU負荷監視と、一定閾値を超えた場合のUnityへの制御命令送信  
連携方式: Unity側との双方向WebSocket通信（共通JSONプロトコル）

# 実装プラン

## アーキテクチャ概要
・.NET8およびWPFを用いたMVVMパターンで実装
・Unityとの双方向WebSocket通信を、JSONプロトコルで行う

## 機能別実装概要
1. チャットUI:
  - XAMLによるUI設計（入力エリア、表示エリア、送信ボタン）
  - MVVMパターンに基づくビューモデルで管理
  - Unity連携のためのWebSocket通信機能の実装

2. 設定管理:
  - 設定画面の構築
  - 設定データの読み書き（JSONまたはXMLで保存）
  - 入力値のバリデーションとエラーハンドリング

3. CPU監視: ※ 実装保留
  - .NETのPerformanceCounterやSystem.Diagnosticsを利用してCPU使用率を取得
  - 定期的な監視と、設定された閾値超過時にUnityへ制御命令の送信
  - ログ取得や監視間隔調整の実装

## 開発フェーズ
・基盤構築: プロジェクトセットアップ、基本ディレクトリ構成の整備、MVVMフレームワーク導入
・機能実装: 各主要機能（チャットUI、設定管理、CPU監視）の実装と個別テスト
・統合テスト: 各機能の連携確認とWebSocket通信の動作確認
・最終調整: UI/UX改善、パフォーマンス最適化、ログ・エラーレポート整備

## 開発上の注意点
・各モジュールの疎結合を意識し、単体テストが容易な設計にする
・CPU監視はシステム負荷に配慮し、適切な監視間隔を設定する
